//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_alignment_SingleSelect;
        
        private static SteamVR_Action_Boolean p_alignment_ToggleSelect;
        
        private static SteamVR_Action_Boolean p_alignment_Grab;
        
        private static SteamVR_Action_Boolean p_alignment_Undo;
        
        private static SteamVR_Action_Boolean p_alignment_Redo;
        
        private static SteamVR_Action_Pose p_alignment_RightHand;
        
        private static SteamVR_Action_Pose p_alignment_LeftHand;
        
        private static SteamVR_Action_Vibration p_alignment_Haptic;
        
        public static SteamVR_Action_Boolean alignment_SingleSelect
        {
            get
            {
                return SteamVR_Actions.p_alignment_SingleSelect.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean alignment_ToggleSelect
        {
            get
            {
                return SteamVR_Actions.p_alignment_ToggleSelect.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean alignment_Grab
        {
            get
            {
                return SteamVR_Actions.p_alignment_Grab.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean alignment_Undo
        {
            get
            {
                return SteamVR_Actions.p_alignment_Undo.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean alignment_Redo
        {
            get
            {
                return SteamVR_Actions.p_alignment_Redo.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose alignment_RightHand
        {
            get
            {
                return SteamVR_Actions.p_alignment_RightHand.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose alignment_LeftHand
        {
            get
            {
                return SteamVR_Actions.p_alignment_LeftHand.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vibration alignment_Haptic
        {
            get
            {
                return SteamVR_Actions.p_alignment_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.alignment_SingleSelect,
                    SteamVR_Actions.alignment_ToggleSelect,
                    SteamVR_Actions.alignment_Grab,
                    SteamVR_Actions.alignment_Undo,
                    SteamVR_Actions.alignment_Redo,
                    SteamVR_Actions.alignment_RightHand,
                    SteamVR_Actions.alignment_LeftHand,
                    SteamVR_Actions.alignment_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.alignment_SingleSelect,
                    SteamVR_Actions.alignment_ToggleSelect,
                    SteamVR_Actions.alignment_Grab,
                    SteamVR_Actions.alignment_Undo,
                    SteamVR_Actions.alignment_Redo,
                    SteamVR_Actions.alignment_RightHand,
                    SteamVR_Actions.alignment_LeftHand};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.alignment_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.alignment_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.alignment_RightHand,
                    SteamVR_Actions.alignment_LeftHand};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.alignment_SingleSelect,
                    SteamVR_Actions.alignment_ToggleSelect,
                    SteamVR_Actions.alignment_Grab,
                    SteamVR_Actions.alignment_Undo,
                    SteamVR_Actions.alignment_Redo};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[0];
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.alignment_SingleSelect,
                    SteamVR_Actions.alignment_ToggleSelect,
                    SteamVR_Actions.alignment_Grab,
                    SteamVR_Actions.alignment_Undo,
                    SteamVR_Actions.alignment_Redo};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_alignment_SingleSelect = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Alignment/in/SingleSelect")));
            SteamVR_Actions.p_alignment_ToggleSelect = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Alignment/in/ToggleSelect")));
            SteamVR_Actions.p_alignment_Grab = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Alignment/in/Grab")));
            SteamVR_Actions.p_alignment_Undo = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Alignment/in/Undo")));
            SteamVR_Actions.p_alignment_Redo = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Alignment/in/Redo")));
            SteamVR_Actions.p_alignment_RightHand = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Alignment/in/RightHand")));
            SteamVR_Actions.p_alignment_LeftHand = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Alignment/in/LeftHand")));
            SteamVR_Actions.p_alignment_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/Alignment/out/Haptic")));
        }
    }
}
